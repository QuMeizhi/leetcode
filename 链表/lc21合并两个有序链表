
21. 合并两个有序链表
将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 

示例：
输入：1->2->4, 1->3->4
输出：1->1->2->3->4->4




class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        //创建一个新的链表，对原始的两个链表进行比较，结点数值小的直接连接在新建链表的后面，即可完成两个链表的合并
        //新创建一个链表，以curr为链表头部
        ListNode dummy = new ListNode(-1);
        dummy.next = l1;  
        ListNode curr = dummy;
        while(l1 != null && l2 != null){
            if(l1.val > l2.val){
                curr.next = l2;
                l2 = l2.next;
                curr = curr.next;
            }
            else{
                curr.next = l1;
                l1 = l1.next;
                curr = curr.next;
            }
        } 
        if(l1 != null && l2 == null){//l1链表有剩余，直接连接上就可以
            curr.next = l1;
        }    
        else{
            curr.next = l2;//l2链表有剩余，直接连接上就可以
        } 
    return dummy.next;
    }
}
