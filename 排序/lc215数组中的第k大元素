215. 数组中的第K个最大元素
在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。

示例 1:
输入: [3,2,1,5,6,4] 和 k = 2
输出: 5

示例 2:
输入: [3,2,3,1,2,4,5,5,6] 和 k = 4
输出: 4

/*
在右指针向左移动、左指针向右移动 时，都有可能发生左、右指针相遇的情况，此时我们就要终止移动，并把基准数放到该位置，然后进行递归。
因此，左、右指针每移动一步，我们都要进行一次判断，看看两个指针有没有相遇。*/

class Solution {
    public int findKthLargest(int[] nums, int k) {
        quick_sort(nums, 0, nums.length - 1);
        return nums[nums.length - k];
    }
    //快排模版
    private void quick_sort(int[] nums, int left, int right){
        while(left >= right) return;
        int pivot = nums[left];//设定一个基准
        //设定与基准比较的区间指针，区间指针！！！
        int low = left - 1;
        int high = right + 1;
        while(low < high){
            do low ++; while(nums[low] < pivot);
            do high --; while(nums[high] > pivot);
            //要一直判断两个区间指针有没有相遇
            if(low < high){//nums[low] > pivot and nums[high] < pivot,交换nums[low],nums[high]
                int tmp = nums[low];
                nums[low] = nums[high];
                nums[high] = tmp;
            }
        }
        quick_sort(nums, left, high);
        quick_sort(nums, high + 1, right);
    }
}
