153. 寻找旋转排序数组中的最小值
假设按照升序排序的数组在预先未知的某个点上进行了旋转。例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] 。
请找出其中最小的元素。

示例 1：
输入：nums = [3,4,5,1,2]
输出：1

示例 2：
输入：nums = [4,5,6,7,0,1,2]
输出：0

示例 3：
输入：nums = [1]
输出：1


class Solution {
    public int findMin(int[] nums) {
        int low = 0;
        int high = nums.length - 1;
        while(low < high){
            int mid = low + (high - low) / 2;
            if(nums[mid] < nums[high]){//mid在右半边,有可能mid就是最小值
                high = mid;
            }else if(nums[mid] > nums[high]){//mid在右半边,要向右边找
                low = mid + 1;
            }
        }
        //跳出循环是low >= high ,所以最小值是肯定在low，所以return nums[low]
        return nums[low];
    }
}
