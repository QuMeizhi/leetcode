21. 合并两个有序链表
将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 

示例：
输入：1->2->4, 1->3->4
输出：1->1->2->3->4->4

//方法1：迭代

class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(-1);
        dummy.next = l1;
        ListNode curr = dummy;
        while(l1 != null && l2 != null){
            if(l1.val < l2.val){
                curr.next = l1;
                l1 = l1.next;
                curr = curr.next;
            } 
            else{
                curr.next = l2;
                l2 = l2.next;
                curr = curr.next;
            }
        }
        if(l1 == null && l2 != null){
            curr.next = l2;
            curr = curr.next;
        }
        if(l1 != null && l2 == null){
            curr.next = l1;
            curr = curr.next;
        }
    return dummy.next;
        
    }
}

//方法2：递归

class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        //base case:两个链表其中有一个为空，递归停止
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        //recursive rule
        if(l1.val < l2.val){
            l1.next = mergeTwoLists(l1.next, l2);
            return l1;
        }else{
            l2.next = mergeTwoLists(l1, l2.next);
            return l2;
        }
    }
}
