给定一个 没有重复 数字的序列，返回其所有可能的全排列。
示例:
输入: [1,2,3]
输出:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]

class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> path = new ArrayList<>();
        boolean[] used = new boolean[nums.length];
        int idx = 0;
        dfs(0, nums, path, res, used);
        return res;
    }
    private void dfs(int idx, int[] nums, List<Integer> path, List<List<Integer>> res, boolean[] used){
        if(path.size() == nums.length){
            res.add(new ArrayList<>(path));//
            return;
        }
        for(int i = 0; i < nums.length; i++){
            if(used[i] == false){//没用过
                path.add(nums[i]);
                used[i] = true;
                dfs(idx + 1, nums, path, res, used);
                path.remove(path.size() - 1);//回溯
                used[i] = false;
            }
        }
    }
}
