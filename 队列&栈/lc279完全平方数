/*
279. 完全平方数
给定正整数 n，找到若干个完全平方数（比如 1, 4, 9, 16, ...）使得它们的和等于 n。你需要让组成和的完全平方数的个数最少。

示例 1:
输入: n = 12
输出: 3 
解释: 12 = 4 + 4 + 4.

示例 2:
输入: n = 13
输出: 2
解释: 13 = 4 + 9.
*/


class Solution {
    public int numSquares(int n) {
        Queue<Integer> queue = new LinkedList<>();
        Set<Integer> visited = new HashSet<>();//set中不允许包含重复
        int level = 0;
        queue.offer(n);
        while(!queue.isEmpty()){
            int size = queue.size();//每次extend进入所有新的点一轮完成后，都会重新计算
            level ++;//开始生成下一层，//一层extend进去新的点的邻接点，才进入下一层，level++
            for(int i = 0; i < size; i++){//size是当时进入时候的size，没有随着extend立刻变化
                int cur = queue.poll();//pop出来一个
                for(int j = 1; j * j <= cur; j++){
                    int next = cur - j * j;//要extend进去刚刚pop出来的相邻的数
                    if(next == 0){//下一层没有了
                        return level;
                    }
                    if(!visited.contains(next)){//不存在的话，加入队列中继续寻找下一层
                        queue.offer(next);
                        visited.add(next);//设置为访问过的了
                    }
                }
            }
        }
    return -1;

    }
}
