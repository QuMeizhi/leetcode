80. 删除排序数组中的重复项 II
给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素最多出现两次，返回移除后数组的新长度。
不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

示例 1:
给定 nums = [1,1,1,2,2,3],
函数应返回新长度 length = 5, 并且原数组的前五个元素被修改为 1, 1, 2, 2, 3 。
你不需要考虑数组中超出新长度后面的元素。

示例 2:
给定 nums = [0,0,1,1,1,1,2,3,3],
函数应返回新长度 length = 7, 并且原数组的前五个元素被修改为 0, 0, 1, 1, 2, 3, 3 。
你不需要考虑数组中超出新长度后面的元素。



//挡板原理：保证[0,index)是不重复的，保证慢指针左边不包括指针本身都是不重复的
class Solution {
    public int removeDuplicates(int[] nums) {
//挡板原理：保证[0,index)中都是不重复的
        int index = 1;
        for(int i = index + 1; i < nums.length; i++){
            if(nums[index - 2 + 1] != nums[i]){//若保留k个重复，就是nums[index - k + 1] != nums[i]
                index ++;
                nums[index] = nums[i];
            }
        }
    return index + 1;
//因为[0,index - 1]都是不重复的，所以数组长度是index + 1；
    }
}
