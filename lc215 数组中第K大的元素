215. 数组中的第K个最大元素
在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。

示例 1:
输入: [3,2,1,5,6,4] 和 k = 2
输出: 5

示例 2:
输入: [3,2,3,1,2,4,5,5,6] 和 k = 4
输出: 4

//方法1：快速排序
class Solution {
    public int findKthLargest(int[] nums, int k) {
        quick_sort(nums, 0, nums.length - 1);
        return nums[nums.length - k];
    }
    private void quick_sort(int[] nums, int left, int right){
        if(left >= right) return;
        int pivot = nums[left];//最左边的基准
        int i = left;
        int j = right;
        while(i < j){
            while(i < j && nums[j] >= pivot){
                j --;
            }
            while(i < j && nums[i] <= pivot){
                i ++;
            }
            if(i < j){
                int tmp = nums[i];
                nums[i] = nums[j];
                nums[j] = tmp;

            } 
        }
        //跳出循环后(i = j相遇的时候)，交换pivot和i的值
        nums[left] = nums[i];
        nums[i] = pivot;
        quick_sort(nums, left, i - 1);
        quick_sort(nums, j + 1, right);
    }
}

//方法2：堆排序
