39. 组合总和
给定一个无重复元素的数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。
candidates 中的数字可以无限制重复被选取。
说明：
所有数字（包括 target）都是正整数。
解集不能包含重复的组合。 
示例 1：
输入：candidates = [2,3,6,7], target = 7,
所求解集为：
[
  [7],
  [2,2,3]
]

class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> path = new ArrayList<>();
        int idx = 0;
        int sum = 0;
        dfs(0, target, candidates, 0, path, res);
        return res;

    }
    private void dfs(int idx,int target, int[] candidates,int sum,List<Integer> path, List<List<Integer>> res){
        if(sum > target) return;//递归出口1，大于target停下来
        if(sum == target){
            res.add(new ArrayList<>(path));
            return;//递归出口2，等于target停下来
        }
        for(int i = idx; i < candidates.length; i++){
            path.add(candidates[i]);
            dfs(i, target,candidates,sum + candidates[i],path,res);
            path.remove(path.size() - 1);
        }
    }
}
