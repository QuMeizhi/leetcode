/**
根据一棵树的中序遍历与后序遍历构造二叉树。
注意:
你可以假设树中没有重复的元素。
例如，给出
中序遍历 inorder = [9,3,15,20,7]
后序遍历 postorder = [9,15,7,20,3]
返回如下的二叉树：
    3
   / \
  9  20
    /  \
   15   7

**/
class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        if(inorder.length == 0 && postorder.length == 0) return null;
        TreeNode root = new TreeNode(postorder[postorder.length - 1]);//root
        int i = 0;
        while(postorder[postorder.length-1] != inorder[i]){
            i ++;//i是root在inorder中的root的index,也说明前面又i个元素
        }//
        root.left = buildTree(Arrays.copyOfRange(inorder,0,i),Arrays.copyOfRange(postorder,0,i));
        root.right = buildTree(Arrays.copyOfRange(inorder,i+1,inorder.length),Arrays.copyOfRange(postorder,i,postorder.length-1));
    return root;
    }
}
