62. 不同路径
一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为“Start” ）。
机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为“Finish”）。
问总共有多少条不同的路径？

例如，上图是一个7 x 3 的网格。有多少可能的路径？

//定义数组：目的是求从左上角-右下角一共有多少种路径，所以定义dp[i][j]:当从左上角走到(i,j)这个位置时，一共有dp[i][j]种路径，那么，dp[m-1][n-1]就是我们要的答案了
class Solution {
    public int uniquePaths(int m, int n) {
        if(m <= 0 || n <= 0) return 0;//走0步就可以
        //初始化数组，dp[i][j]表示从dp[0][0]-dp[i][j]的不同路径数
        int[][] dp = new int[m][n];
        //base case,寻找初始值
        for(int i = 0; i < m; i++){
            dp[i][0] = 1;//只在第一列走
        }
        for(int j = 0; j < n; j++){
            dp[0][j] = 1;//只在第一行走
        }
        //寻找关系式，第一步走到坐标为(0,0)
        for(int i = 1; i < m; i++){
            for(int j = 1; j < n; j++){
                //坐标(i,j)可以由坐标(i - 1,j)向下走一步或者坐标(i, j - 1)向右走一步而来
                dp[i][j] = dp[i - 1][j] + dp[i][j - 1];

            }
        }
        return dp[m - 1][n - 1];//m行n列的最后坐标为(m - 1, n - 1)
    }
}
