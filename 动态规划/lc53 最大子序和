53. 最大子序和
给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

示例:
输入: [-2,1,-3,4,-1,2,1,-5,4]
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。
进阶:
如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的分治法求解。


/*step1：定义dp[i]为下标0-i的最大和
step2：状态转移方程 dp[i - 1] > 0 则 dp[i] = dp[i - 1] + nums[i]
                dp[i - 1] < 0 则 dp[i] = nums[i]
step3:初始化 dp[0] = nums[0]
*/
class Solution {
    public int maxSubArray(int[] nums) {
        int[] dp = new int[nums.length];
        int sum = nums[0];
        if(nums.length == 0){
            return 0;
        }
        //初始化
        dp[0] = nums[0];
        for(int i = 1; i < nums.length; i++){
            if(dp[i - 1] > 0){
                dp[i] = dp[i - 1] + nums[i];
            }else{//因为要最大和，所以前面的和为负数就不要了，因为负数会使后面的和变小
                dp[i] = nums[i];
            }
        sum = Math.max(sum, dp[i]);
        }
    return sum;

    }
}
