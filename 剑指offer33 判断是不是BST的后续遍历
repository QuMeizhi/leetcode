剑指 Offer 33. 二叉搜索树的后序遍历序列
输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历结果。如果是则返回 true，否则返回 false。假设输入的数组的任意两个数字都互不相同。
参考以下这颗二叉搜索树：
     5
    / \
   2   6
  / \
 1   3
示例 1：
输入: [1,6,3,2,5]
输出: false

示例 2：
输入: [1,3,2,6,5]
输出: true


class Solution {
    public boolean verifyPostorder(int[] postorder) {
        return helper(postorder, 0, postorder.length - 1);
    }
    private boolean helper(int[] postorder,int left,int right){
        if(left >= right) return true;
        int root = postorder[right];//root
        //left right root
        int k = left;//k是右子树第一个结点
        while(postorder[k] < root) k++;
        for(int i = k; i < right; i++){
            if(postorder[i] < root){
                return false;//右边有比root小的，就false
            }
        }
        //递归左右子树
    return helper(postorder, left, k - 1) && helper(postorder, k, right - 1);
    }
}

