75. 颜色分类
给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。
此题中，我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。
注意:
不能使用代码库中的排序函数来解决这道题。

示例:
输入: [2,0,2,1,1,0]
输出: [0,0,1,1,2,2]

class Solution {
    public void sortColors(int[] nums) {
//保证[0,i)都是0，[j,nums.length - 1]都是2
//还要保证i指针左边都是0/1，所以等2的时候交换不能i++，因为不知道交换过来的是多少，所以不能i--
//low和high用于固定元素，i用于移动遍历元素
        int low = 0; int high = nums.length - 1;
        int i = 0;
        while(i <= high){
            if(nums[i] == 0){
                int temp = nums[i];
                nums[i] = nums[low];
                nums[low] = temp;
                low++;
                i++;
            }
            else if(nums[i] == 1){//遇到1不用交换，继续向前遍历即可
                i++;
            }
            else if(nums[i] == 2){
                int temp = nums[i];
                nums[i] = nums[high];
                nums[high] = temp;
                high--;
            }
        }
    }
    
}
